SERVER_PORT=8080

# Database Configuration
DB_HOST=localhost
DB_PORT=3306
DB_USER=your_db_user
DB_PASSWORD=your_db_password
DB_NAME=your_db_name

# Database Migration
# Set to "true" to enable auto-migration on startup
RUN_MIGRATION=true

# Redis Configuration
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=your_redis_password
REDIS_DB=0

# OAuth2 Providers Configuration
# Note: For Google OAuth to work, you need to:
# 1. Create a project in Google Cloud Console
# 2. Enable Google+ API or People API
# 3. Create OAuth 2.0 credentials (Web application)
# 4. Add http://localhost:8080/api/v1/auth/google/callback to authorized redirect URIs
GOOGLE_CLIENT_ID=your-google-client-id
GOOGLE_CLIENT_SECRET=your-google-client-secret
GOOGLE_REDIRECT_URL=http://localhost:8080/api/v1/auth/google/callback

# GitHub OAuth2 Configuration
# 1. Go to GitHub Settings > Developer settings > OAuth Apps
# 2. Create a new OAuth App
# 3. Set Authorization callback URL to http://localhost:8080/api/v1/auth/github/callback
GITHUB_CLIENT_ID=your-github-client-id
GITHUB_CLIENT_SECRET=your-github-client-secret
GITHUB_REDIRECT_URL=http://localhost:8080/api/v1/auth/github/callback

# Telegram OAuth2 Configuration
# 1. Create a bot via @BotFather on Telegram
# 2. Get bot token from @BotFather
# 3. Set domain with /setdomain command
TELEGRAM_BOT_TOKEN=your-telegram-bot-token
TELEGRAM_REDIRECT_URL=http://localhost:8080/api/v1/auth/telegram/callback

# Logging Configuration
LOG_LEVEL=info
LOG_FORMAT=text
LOG_OUTPUT=stdout

# JWT Configuration
# Use a strong, unique secret for production
JWT_SECRET=your-super-secret-jwt-key-make-it-strong-and-long
JWT_EXPIRE_HOURS=24

# ==========================================
# Additional Configuration Notes
# ==========================================
# 1. Invite Code System is enabled by default
# 2. Users can register with or without invite codes
# 3. Invite codes can be single-use or multi-use
# 4. Admin users can view invite code statistics
# 5. All endpoints require active user status
# 6. OAuth2 providers are optional - system works without them
# 7. Use HTTPS in production for security
# 8. Set appropriate CORS headers for your frontend domain